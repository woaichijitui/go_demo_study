// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: product.proto

package server

import (
	"context"

	"gozero_mall_study/service/product/rpc/internal/logic"
	"gozero_mall_study/service/product/rpc/internal/svc"
	"gozero_mall_study/service/product/rpc/productlclient"
)

type ProductServer struct {
	svcCtx *svc.ServiceContext
	productlclient.UnimplementedProductServer
}

func NewProductServer(svcCtx *svc.ServiceContext) *ProductServer {
	return &ProductServer{
		svcCtx: svcCtx,
	}
}

func (s *ProductServer) Create(ctx context.Context, in *productlclient.CreateRequest) (*productlclient.CreateResponse, error) {
	l := logic.NewCreateLogic(ctx, s.svcCtx)
	return l.Create(in)
}

func (s *ProductServer) Update(ctx context.Context, in *productlclient.UpdateRequest) (*productlclient.UpdateResponse, error) {
	l := logic.NewUpdateLogic(ctx, s.svcCtx)
	return l.Update(in)
}

func (s *ProductServer) Remove(ctx context.Context, in *productlclient.RemoveRequest) (*productlclient.RemoveResponse, error) {
	l := logic.NewRemoveLogic(ctx, s.svcCtx)
	return l.Remove(in)
}

func (s *ProductServer) Detail(ctx context.Context, in *productlclient.DetailRequest) (*productlclient.DetailResponse, error) {
	l := logic.NewDetailLogic(ctx, s.svcCtx)
	return l.Detail(in)
}
